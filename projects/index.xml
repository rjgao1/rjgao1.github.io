<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on Rooney Jingyuan Gao</title>
    <link>http://rjgao.me/projects/</link>
    <description>Recent content in Projects on Rooney Jingyuan Gao</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 17 Aug 2020 11:29:12 -0400</lastBuildDate>
    
	<atom:link href="http://rjgao.me/projects/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NBA-Shotchart</title>
      <link>http://rjgao.me/projects/nba-shotchart/</link>
      <pubDate>Mon, 17 Aug 2020 11:29:12 -0400</pubDate>
      
      <guid>http://rjgao.me/projects/nba-shotchart/</guid>
      <description>An interactive dashboard for NBA player shot data.
Built with React, d3-shotchart (https://www.npmjs.com/package/d3-shotchart), a Node.js client for stats.nba.com API endpoints (https://www.npmjs.com/package/nba) and Ant Design (https://ant.design/).
The hexbin chart visualizes the frequency and efficiency of shots made on the court.
In the hexbin mode, user can filter shots by minimum frequency using the slide bar or input box. Maximum frequency for this filter is 20.
The scatter chart visualizes the missed and made shots, while the tooltips display the distance and action type of the shots.</description>
    </item>
    
    <item>
      <title>Tweety Pipe</title>
      <link>http://rjgao.me/projects/tweety-pipe/</link>
      <pubDate>Mon, 17 Aug 2020 11:08:44 -0400</pubDate>
      
      <guid>http://rjgao.me/projects/tweety-pipe/</guid>
      <description>A real-time data processor built with Spark and Kafka. Data visualized with a simple Flask app and Chart.js
This project has two components. The first component is
twitter-spark This component gives a dynamic bargraph of the trending Twitter hastags, aiming to mimic the Twitter &amp;ldquo;trending&amp;rdquo; function.
This component streams live tweets, processes and visualizes them in real-time
It is composed of a Twitter app, a real-time Spark processor and a Flask app.</description>
    </item>
    
    <item>
      <title>Projects</title>
      <link>http://rjgao.me/projects/all-projects/</link>
      <pubDate>Sun, 14 Jun 2020 03:32:07 -0400</pubDate>
      
      <guid>http://rjgao.me/projects/all-projects/</guid>
      <description>Homeless Shelter Occupancy Monitor
Tweety-Pipe: A Real-Time Data Processor with Spark and Kafka
NBA-Shortchart: An Interactive Visualization Dashboard for NBA player Shot Data
AFK, grabbing lunch, more to come!</description>
    </item>
    
    <item>
      <title>Occupancy Monitor</title>
      <link>http://rjgao.me/projects/occupancy-monitor/</link>
      <pubDate>Sun, 14 Jun 2020 03:26:48 -0400</pubDate>
      
      <guid>http://rjgao.me/projects/occupancy-monitor/</guid>
      <description>Code This open source project&amp;rsquo;s code is not available to the public lives here.
Credits this amazing blog from pysource . this amazing blog from pyimagesearch .
example tensorflow usage from medium user @@madhawavidanapathirana .
pretrained models provided by this:
Description Our application: Our application detects and tracks humans from a live or recorded video feed, and keeps track of a counter for the number of times people enter and leave a space.</description>
    </item>
    
  </channel>
</rss>